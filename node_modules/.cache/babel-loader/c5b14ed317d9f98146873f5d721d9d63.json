{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction highlightText(text, index, highlightError) {\n  let html;\n\n  if (highlightError) {\n    html = `<span class=\"success\">${text.slice(0, index)}</span><span class=\"error\">${text.slice(index, index + 1)}</span>${text.slice(index + 1)}`;\n  } else {\n    html = `<span class=\"success\">${text.slice(0, index)}</span>${text.slice(index)}`;\n  }\n\n  return {\n    __html: html\n  };\n}\n\nconst ViewText = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  let flag = false;\n\n  function handleChange(e) {\n    if (templateText[counter] === e.key) {\n      setCounter(counter => counter + 1);\n\n      if (counter === 1) {\n        setStartTime(Date.now());\n      } else {\n        if (counter === templateText.length - 1) {\n          setCurrentTime(Math.round(templateText.length / (Date.now() - startTime) * 60000));\n        }\n      }\n    } else {\n      flag = false;\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keypress', handleChange);\n    return () => window.removeEventListener('keypress', handleChange);\n  }, [handleChange]);\n  let text = [];\n  const [templateText, setTemplateText] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setTemplateText(text));\n    return text;\n  }\n\n  useEffect(() => {\n    getText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442, \\u0437\\u043D/\\u043C\\u0438\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      dangerouslySetInnerHTML: highlightText(templateText, counter)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"Y2radI1ByUEKiV45UQJvmsUbV30=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","useEffect","highlightText","text","index","highlightError","html","slice","__html","ViewText","counter","setCounter","startTime","setStartTime","currentTime","setCurrentTime","flag","handleChange","e","templateText","key","Date","now","length","Math","round","window","addEventListener","removeEventListener","setTemplateText","getText","fetch","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,OAAxB;;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,cAApC,EAAoD;AAEhD,MAAIC,IAAJ;;AACA,MAAID,cAAJ,EAAoB;AAEhBC,IAAAA,IAAI,GAAI,yBAAwBH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcH,KAAd,CAAqB,8BAA6BD,IAAI,CAACI,KAAL,CAAWH,KAAX,EAAkBA,KAAK,GAAG,CAA1B,CAA6B,UAASD,IAAI,CAACI,KAAL,CAAWH,KAAK,GAAG,CAAnB,CAAsB,EAA9I;AACH,GAHD,MAGO;AACHE,IAAAA,IAAI,GAAI,yBAAwBH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcH,KAAd,CAAqB,UAASD,IAAI,CAACI,KAAL,CAAWH,KAAX,CAAkB,EAAhF;AACH;;AAED,SAAO;AAACI,IAAAA,MAAM,EAAEF;AAAT,GAAP;AACH;;AAED,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AAGnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AAEA,MAAIgB,IAAI,GAAG,KAAX;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrB,QAAIC,YAAY,CAACT,OAAD,CAAZ,KAA0BQ,CAAC,CAACE,GAAhC,EAAqC;AACjCT,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;;AACA,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACfG,QAAAA,YAAY,CAACQ,IAAI,CAACC,GAAL,EAAD,CAAZ;AACH,OAFD,MAEO;AACH,YAAIZ,OAAO,KAAKS,YAAY,CAACI,MAAb,GAAsB,CAAtC,EAAyC;AACrCR,UAAAA,cAAc,CAACS,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACI,MAAb,IAAuBF,IAAI,CAACC,GAAL,KAAaV,SAApC,IAAiD,KAA5D,CAAD,CAAd;AACH;AACJ;AAEJ,KAVD,MAUK;AACDI,MAAAA,IAAI,GAAC,KAAL;AACH;AACJ;;AAGDf,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoCV,YAApC;AACA,WAAO,MAAMS,MAAM,CAACE,mBAAP,CAA2B,UAA3B,EAAuCX,YAAvC,CAAb;AACH,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT;AAKA,MAAId,IAAI,GAAG,EAAX;AACA,QAAM,CAACgB,YAAD,EAAeU,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;;AAEA,iBAAe8B,OAAf,GAAyB;AACrB3B,IAAAA,IAAI,GAAG,MAAM4B,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIhC,IAAI,GAAGgC,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMH,eAAe,CAAC1B,IAAD,CAHlB,CAAb;AAIA,WAAOA,IAAP;AACH;;AAGDF,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,uBAAuB,EAAEZ,aAAa,CAACiB,YAAD,EAAeT,OAAf;AAAlE;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEoB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1DD;;GAAMrB,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useEffect} from \"react\";\n\nfunction highlightText(text, index, highlightError) {\n\n    let html;\n    if (highlightError) {\n\n        html = `<span class=\"success\">${text.slice(0, index)}</span><span class=\"error\">${text.slice(index, index + 1)}</span>${text.slice(index + 1)}`;\n    } else {\n        html = `<span class=\"success\">${text.slice(0, index)}</span>${text.slice(index)}`;\n    }\n\n    return {__html: html};\n}\n\nconst ViewText = () => {\n\n\n    const [counter, setCounter] = useState(0);\n    const [startTime, setStartTime] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    let flag = false;\n\n    function handleChange(e) {\n        if (templateText[counter] === e.key) {\n            setCounter(counter => counter + 1);\n            if (counter === 1) {\n                setStartTime(Date.now())\n            } else {\n                if (counter === templateText.length - 1) {\n                    setCurrentTime(Math.round(templateText.length / (Date.now() - startTime) * 60000))\n                }\n            }\n\n        }else{\n            flag=false\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('keypress', handleChange);\n        return () => window.removeEventListener('keypress', handleChange);\n    }, [handleChange]);\n\n    let text = [];\n    const [templateText, setTemplateText] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setTemplateText(text));\n        return text\n    }\n\n\n    useEffect(() => {\n        getText();\n    }, []);\n    return (\n        <div>\n            <div>\n                <h2>Ваш результат, зн/мин</h2>\n                <h2>\n                    {currentTime}\n                </h2>\n            </div>\n            <div className=\"random_txt\" dangerouslySetInnerHTML={highlightText(templateText, counter, )}></div>\n            <button className=\"btn_txt\" onClick={getText}>Try again!</button>\n        </div>)\n\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}