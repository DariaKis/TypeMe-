{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport InputText from \"../Text/inputText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Text() {\n  _s();\n\n  let text = [];\n  const [value, setValue] = useState('');\n  const [addText, setAddText] = useState('');\n  const [counter, setCounter] = useState('100');\n  const [input, setInput] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setValue(text)); // .then(() => console.log(text[0]));\n\n    return text;\n  }\n\n  const txt = Object.values(value).map(_ref => {\n    let [value] = _ref;\n    return {\n      value\n    };\n  });\n  console.log(setInput);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041D\\u0430\\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0439 \\u041C\\u0435\\u043D\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      onSearch: setInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: getText,\n      children: \"Let`s start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Text, \"EERwUFaPhREa3g0AhogSA2XLicw=\");\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/Text.jsx"],"names":["React","useState","MyButton","InputText","Text","text","value","setValue","addText","setAddText","counter","setCounter","input","setInput","getText","fetch","then","res","json","data","txt","Object","values","map","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AAGZ,MAAIC,IAAI,GAAC,EAAT;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAqBV,QAAQ,CAAC,KAAD,CAAnC;AAEA,QAAM,CAAEW,KAAF,EAASC,QAAT,IAAqBZ,QAAQ,CAAC,EAAD,CAAnC;;AAGA,iBAAea,OAAf,GAAyB;AACrBT,IAAAA,IAAI,GAAG,MAAMU,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAId,IAAI,GAAGc,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMT,QAAQ,CAACF,IAAD,CAHX,CAAb,CADqB,CAKrB;;AACA,WAAOA,IAAP;AACH;;AACD,QAAMe,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAchB,KAAd,EAAqBiB,GAArB,CAAyB;AAAA,QAAC,CAACjB,KAAD,CAAD;AAAA,WAAc;AAACA,MAAAA;AAAD,KAAd;AAAA,GAAzB,CAAZ;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AAIA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,gBAAMP;AAAN;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEQ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhDQV,I;;KAAAA,I;AAkDT,eAAeA,IAAf","sourcesContent":["import React, {useState}  from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport InputText from \"../Text/inputText\";\n\n\n\n\nfunction Text() {\n\n\n    let text=[];\n\n    const [value, setValue] = useState('');\n    const [addText, setAddText]=useState('');\n    const [counter,setCounter]=useState('100');\n\n    const [ input, setInput] = useState('');\n\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setValue(text));\n        // .then(() => console.log(text[0]));\n        return text\n    }\n    const txt = Object.values(value).map(([value]) => ({value}));\n\n    console.log(setInput);\n\n\n\n    return (\n        <div >\n            <div>\n                <span>Напечатай Меня!</span>\n            </div>\n            <InputText onSearch={setInput}  />\n                {/*<input className=\"add_text\" type='text' value={addText} onChange={event => setAddText(event.target.addText)}/>*/}\n\n            <div>{value}</div>\n            {/*<MyInput*/}\n            {/*    type='text'*/}\n            {/*    value={value}*/}\n            {/*    // onChange={event => setValue(event.target.value)}*/}\n            {/*/>*/}\n            <MyButton onClick={getText}>\n                Let`s start!\n            </MyButton>\n\n\n        </div>\n\n    );\n}\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}