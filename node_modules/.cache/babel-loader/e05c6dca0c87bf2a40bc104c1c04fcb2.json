{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewText = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  function handleChange(e) {\n    if (templateText[counter] === e.key) {\n      setCounter(counter => counter + 1);\n\n      if (counter === 1) {\n        setStartTime(Date.now());\n      } else {\n        if (counter === templateText.length - 1) {\n          setCurrentTime(Math.round(templateText.length / (Date.now() - startTime) * 60000));\n        }\n      }\n    }\n\n    console.log(counter);\n  }\n\n  useEffect(() => {\n    window.addEventListener('keypress', handleChange);\n    return () => window.removeEventListener('keypress', handleChange);\n  }, []);\n  let text = [];\n  const [templateText, setTemplateText] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setTemplateText(text));\n    return text;\n  }\n\n  useEffect(() => {\n    getText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      children: templateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"Y2radI1ByUEKiV45UQJvmsUbV30=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","useEffect","ViewText","counter","setCounter","startTime","setStartTime","currentTime","setCurrentTime","handleChange","e","templateText","key","Date","now","length","Math","round","console","log","window","addEventListener","removeEventListener","text","setTemplateText","getText","fetch","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,OAAxB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAGnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;;AAGA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACrB,QAAIC,YAAY,CAACR,OAAD,CAAZ,KAA0BO,CAAC,CAACE,GAAhC,EAAqC;AACjCR,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;;AACA,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACfG,QAAAA,YAAY,CAACO,IAAI,CAACC,GAAL,EAAD,CAAZ;AACH,OAFD,MAEO;AACH,YAAIX,OAAO,KAAKQ,YAAY,CAACI,MAAb,GAAsB,CAAtC,EAAyC;AACrCP,UAAAA,cAAc,CAACQ,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACI,MAAb,IAAuBF,IAAI,CAACC,GAAL,KAAaT,SAApC,IAAiD,KAA5D,CAAD,CAAd;AACH;AACJ;AACJ;;AAEDa,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACH;;AAEDF,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoCZ,YAApC;AACA,WAAO,MAAMW,MAAM,CAACE,mBAAP,CAA2B,UAA3B,EAAuCb,YAAvC,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIc,IAAI,GAAG,EAAX;AACA,QAAM,CAACZ,YAAD,EAAea,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,iBAAeyB,OAAf,GAAyB;AACrBF,IAAAA,IAAI,GAAG,MAAMG,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIP,IAAI,GAAGO,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMH,eAAe,CAACD,IAAD,CAHlB,CAAb;AAIA,WAAOA,IAAP;AACH;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA,kBACKlB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEc,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvDD;;GAAMvB,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useEffect} from \"react\";\n\n\nconst ViewText = () => {\n\n\n    const [counter, setCounter] = useState(0);\n    const [startTime, setStartTime] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n\n    function handleChange(e) {\n        if (templateText[counter] === e.key) {\n            setCounter(counter => counter + 1);\n            if (counter === 1) {\n                setStartTime(Date.now())\n            } else {\n                if (counter === templateText.length - 1) {\n                    setCurrentTime(Math.round(templateText.length / (Date.now() - startTime) * 60000))\n                }\n            }\n        }\n\n        console.log(counter);\n    }\n\n    useEffect(() => {\n        window.addEventListener('keypress', handleChange);\n        return () => window.removeEventListener('keypress', handleChange);\n    }, []);\n\n    let text = [];\n    const [templateText, setTemplateText] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setTemplateText(text));\n        return text\n    }\n\n    useEffect(() => {\n        getText();\n    }, []);\n    return (\n        <div>\n            <div>\n                <h2>\n                    {currentTime}\n                </h2>\n            </div>\n            <div className=\"random_txt\">{templateText}</div>\n            <button className=\"btn_txt\" onClick={getText}>\n                Try again!\n            </button>\n        </div>\n    );\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}