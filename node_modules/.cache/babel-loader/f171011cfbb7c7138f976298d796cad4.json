{"ast":null,"code":"// import React from 'react';\n// import classes from \"./keyboard.module.css\"\n//\n//\n// const Keyboard = () => {\n//     const input = document.querySelector(\"input\");\n//     const letters = Array.from(document.querySelectorAll(\"[data-letters]\"));\n//     const specs = Array.from(document.querySelectorAll(\"[data-spec]\"));\n//     const textExample=document.querySelector('#textExample');\n//     const speed=document.querySelector(\"#symbolsPerMinute\");\n//     const accuracy=document.querySelector(\"#errorPercent\");\n//\n//\n//     const text = `Изучая факторы обеспечившие непрерывность и устойчивость китайской цивилизации, авторы четырехтомника говорят о ее колоссальной\n// центростремительной силе, беспрестанном самосовершенствовании и моральном стержне, связанном в первую очередь с культом предков. Эта непрерывная,\n// единая цивилизация исходила из своей собственной логики эволюции и развития. В отличие от большинства других древних цивилизаций, давно сошедших\n// с исторической сцены, китайская занимала значительное пространство, что создавало благоприятные условия для ассимиляции и интеграции иных народов.\n// Главными условиями этого были воспитание и ненасильственное распространение китайской культуры.\n// Сущность китайской цивилизации авторы выражают термином «единство многообразия» (доюань итигэ), называют ее многокомпонентной и полиэтничной\n// (доюань вэньмин). Факторами, обеспечившими стабильность ее развития, называют восприимчивость к элементам пришедших извне культур, взаимодействие\n// элитарного и простонародного, а также «новаторство через возвращение к древности». Большое внимание в четырехтомнике уделяется вкладу китайской\n// цивилизации в мировую культуру, ее самобытным и разнообразным достижениям в науке и искусстве.`;\n//\n//     const part = createPart(text);\n//\n//     init();\n//\n//     function init() {\n//         addEventListener('keydown', onkeydown);\n//         addEventListener('keyup', onkeyup);\n//         viewUpdate();\n//\n//     }\n//\n//     function onkeydown(event) {\n//         event.preventDefault();\n//\n//         const letter = letters.find((x) => x.dataset.letters.includes(event.key));\n//\n//         if (letter) {\n//             letter.classList.add(\"pressed\");\n//             pressedWords(event.key);\n//             return;\n//         }\n//\n//         let key = event.key.toLowerCase();\n//\n//         if (key === \" \") {\n//             key = \"space\";\n//             pressedWords( \" \")\n//         }\n//\n//         if (key ===\"enter\"){\n//             pressedWords(\"\\n\")\n//         }\n//\n//         const ownSpecs = specs.filter((x) => x.dataset.spec === key);\n//         if (ownSpecs.length) {\n//             ownSpecs.forEach((spec) => spec.classList.add(\"pressed\"));\n//             return;\n//         }\n//     }\n//\n//     function onkeyup(event) {\n//         event.preventDefault();\n//\n//         const letter = letters.find((x) => x.dataset.letters.includes(event.key));\n//\n//         if (letter) {\n//             letter.classList.remove(\"pressed\");\n//             return;\n//         }\n//\n//         let key = event.key.toLowerCase();\n//\n//         if (key === \" \") {\n//             key = \"space\";\n//         }\n//\n//\n//         const ownSpecs = specs.filter((x) => x.dataset.spec === key);\n//         if (ownSpecs.length) {\n//             ownSpecs.forEach((spec) => spec.classList.remove(\"pressed\"));\n//             return;\n//         }\n//\n//     }\n//\nfunction createPart() {\n  const part = {\n    text,\n    strings: [],\n    maxStringLength: 70,\n    maxShowStrings: 3,\n    currentStringIndex: 0,\n    currentPrintedIndex: 0,\n    sumSymbols: 0,\n    errors: [],\n    errorCounter: 0,\n    startingTimer: 0,\n    beginningTime: false,\n    timeCounter: 0,\n    statFlag: false\n  };\n  part.text = part.text.replace(/\\n/g, '\\n ');\n  const words = part.text.split(\" \");\n  let string = [];\n\n  for (const word of words) {\n    const newStringLength = [...string, word].join(\" \").length + !word.includes(\"\\n\");\n\n    if (newStringLength > part.maxStringLength) {\n      part.strings.push(string.join(' ') + ' ');\n      string = [];\n    }\n\n    string.push(word);\n\n    if (word.includes('\\n')) {\n      part.strings.push(string.join(' '));\n      string = [];\n    }\n  }\n\n  if (string.length) {\n    part.strings.push(string.join(' '));\n  }\n\n  return part;\n} //     function pressedWords(letter) {\n//         part.beginningTime=true;\n//         if (!part.statFlag){\n//             part.statFlag=true;\n//             part.startingTimer=Date.now();\n//         }\n//         const string = part.strings[part.currentStringIndex];\n//         const printedLetter = string[part.currentPrintedIndex];\n//\n//         if (letter === printedLetter) {\n//             part.currentPrintedIndex++;\n//             if (string.length <= part.currentPrintedIndex) {\n//                 part.currentPrintedIndex = 0;\n//                 part.currentStringIndex++;\n//\n//                 part.statFlag=false;\n//                 part.timeCounter=Date.now()-part.startingTimer;\n//\n//             }\n//         } else if (!part.errors.includes(printedLetter)) {\n//             part.errors.push(printedLetter);\n//             part.errorCounter++;\n//         }\n//\n//         part.sumSymbols++;\n//         viewUpdate();\n//\n//     }\n//\n//     function viewUpdate() {\n//         const string = part.strings[part.currentStringIndex];\n//         const showedStrings = part.strings.slice(\n//             part.currentStringIndex,\n//             part.currentStringIndex + part.maxShowStrings\n//         );\n//         const div=document.createElement('div');\n//\n//         const firstString=document.createElement('div');\n//         firstString.classList.add('line');\n//         div.append(firstString);\n//\n//         const printedString=document.createElement('span');\n//         printedString.classList.add('done');\n//         printedString.textContent=string.slice(0, part.currentPrintedIndex);\n//\n//         firstString.append(\n//             printedString,\n//             ...string\n//                 .slice(part.currentPrintedIndex)\n//                 .split(\"\")\n//                 .map((letter) => {\n//                     if (letter===\" \"){\n//                         return \"•\"\n//                     }\n//\n//                     if (part.errors.includes(letter)){\n//                         const errorSpan=document.createElement('span');\n//                         errorSpan.classList.add('hint');\n//                         errorSpan.textContent=letter;\n//                         return errorSpan;\n//                     }\n//                     return letter;\n//                 })\n//         );\n//\n//         for (let i = 1; i < showedStrings.length; i++) {\n//             const nextString = document.createElement('div');\n//             nextString.classList.add('line');\n//             div.append(nextString);\n//\n//             nextString.append(\n//                 ...showedStrings[i]\n//                     .split(\"\").map((letter) => {\n//                         if (letter === \" \") {\n//                             return \"•\"\n//                         }\n//\n//                         if (part.errors.includes(letter)){\n//                             const errorSpan=document.createElement('span');\n//                             errorSpan.classList.add('hint');\n//                             errorSpan.textContent=letter;\n//                             return errorSpan;\n//                         }\n//                         return letter;\n//                     })\n//             );\n//         }\n//\n//         textExample.innerHTML=\"\";\n//         textExample.append(div);\n//\n//         input.value=string.slice(0, part.currentPrintedIndex);\n//\n//         if (!part.statFlag && part.beginningTime) {\n//             speed.textContent = Math.round(part.sumSymbols / (part.timeCounter / 1000 / 60));\n//             accuracy.textContent = Math.floor((10000 * part.errorCounter) / part.sumSymbols) / 100 + \"%\";\n//         }\n//     };\n//     return (\n//         <div>\n//         <div className=\"text\" id=\"textExample\">\n//             <div className=\"line line-1\">\n//                 <div>\n//                     <span className=\"done\"> На переднем плане, прямо перед</span>\n//                     <span className=\"hint\">н</span>ами, расположен был дворик, где стоял\n//                 </div>\n//                 <div className=\"line\">\n//                     наполовину вычищенный автомобиль. Шофер Остин был на этот раз\n//                 </div>\n//                 <div className=\"line\">\n//                     уволен окончательно и бесповоротно. Он раскинулся на земле,\n//                 </div>\n//             </div>\n//         </div>\n//\n//             <div className=\"keyboard\">\n//                 <div className=\"line\">\n//                     <div id=\"letter_ё\" data-letters=\"Ёё\">Ё</div>\n//                     <div id=\"letter_1\" data-letters=\"1\">1</div>\n//                     <div id=\"letter_2\" data-letters=\"2\">2</div>\n//                     <div id=\"letter_3\" data-letters=\"3\">3</div>\n//                     <div id=\"letter_4\" data-letters=\"4\">4</div>\n//                     <div id=\"letter_5\" data-letters=\"5\">5</div>\n//                     <div id=\"letter_6\" data-letters=\"6\">6</div>\n//                     <div id=\"letter_7\" data-letters=\"7\">7</div>\n//                     <div id=\"letter_8\" data-letters=\"8\">8</div>\n//                     <div id=\"letter_9\" data-letters=\"9\">9</div>\n//                     <div id=\"letter_0\" data-letters=\"0\">0</div>\n//                     <div id=\"letter_minus\" data-letters=\"-\">-</div>\n//                     <div id=\"letter_plus\" data-letters=\"+\">+</div>\n//                     <div className=\"backspace\" id=\"letter_backspace\" data-spec=\"backspace\">Backspace</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"tab\" id=\"letter_tab\" data-spec=\"tab\">Tab</div>\n//                     <div id=\"letter_й\" data-letters=\"Йй\">Й</div>\n//                     <div id=\"letter_ц\" data-letters=\"Цц\">Ц</div>\n//                     <div id=\"letter_у\" data-letters=\"Уу\">У</div>\n//                     <div id=\"letter_к\" data-letters=\"Кк\">К</div>\n//                     <div id=\"letter_е\" data-letters=\"Ее\">Е</div>\n//                     <div id=\"letter_н\" data-letters=\"Нн\">Н</div>\n//                     <div id=\"letter_г\" data-letters=\"Гг\">Г</div>\n//                     <div id=\"letter_ш\" data-letters=\"Шш\">Ш</div>\n//                     <div id=\"letter_щ\" data-letters=\"Щщ\">Щ</div>\n//                     <div id=\"letter_з\" data-letters=\"Зз\">З</div>\n//                     <div id=\"letter_х\" data-letters=\"Хх\">Х</div>\n//                     <div id=\"letter_ъ\" data-letters=\"Ъъ\">Ъ</div>\n//                     <div id=\"letter_slash\" data-letters=\"slash\">/</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"caps\" id=\"letter_capslock\" data-spec=\"capslock\">Caps Lock</div>\n//                     <div id=\"letter_ф\" data-letters=\"Фф\">Ф</div>\n//                     <div id=\"letter_ы\" data-letters=\"Ыы\">Ы</div>\n//                     <div id=\"letter_в\" data-letters=\"Вв\">В</div>\n//                     <div id=\"letter_а\" data-letters=\"Аа\">А</div>\n//                     <div id=\"letter_п\" data-letters=\"Пп\">П</div>\n//                     <div id=\"letter_р\" data-letters=\"Рр\">Р</div>\n//                     <div id=\"letter_о\" data-letters=\"Оо\">О</div>\n//                     <div id=\"letter_л\" data-letters=\"Лл\">Л</div>\n//                     <div id=\"letter_д\" data-letters=\"Дд\">Д</div>\n//                     <div id=\"letter_ж\" data-letters=\"Жж\">Ж</div>\n//                     <div id=\"letter_э\" data-letters=\"Ээ\">Э</div>\n//                     <div className=\"enter\" id=\"letter_enter\" data-spec=\"enter\">Enter</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"shift\" data-spec=\"shift\">Shift</div>\n//                     <div id=\"letter_я\" data-letters=\"Яя\">Я</div>\n//                     <div id=\"letter_ч\" data-letters=\"Чч\">Ч</div>\n//                     <div id=\"letter_с\" data-letters=\"Сс\">С</div>\n//                     <div id=\"letter_м\" data-letters=\"Мм\">М</div>\n//                     <div id=\"letter_и\" data-letters=\"Ии\">И</div>\n//                     <div id=\"letter_т\" data-letters=\"Тт\">Т</div>\n//                     <div id=\"letter_ь\" data-letters=\"Ьь\">Ь</div>\n//                     <div id=\"letter_б\" data-letters=\"Бб\">Б</div>\n//                     <div id=\"letter_ю\" data-letters=\"Юю\">Ю</div>\n//                     <div id=\"letter_dot\" data-spec=\"dot\">. <sup>,</sup></div>\n//                     <div className=\"shift\" data-spec=\"shift\">Shift</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"space\" id=\"letter_space\" data-spec=\"space\"></div>\n//                     <div className=\"alt\" id=\"letter_alt\" data-spec=\"alt\">Alt</div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// };\n//\n// export default Keyboard;","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard.jsx"],"names":["createPart","part","text","strings","maxStringLength","maxShowStrings","currentStringIndex","currentPrintedIndex","sumSymbols","errors","errorCounter","startingTimer","beginningTime","timeCounter","statFlag","replace","words","split","string","word","newStringLength","join","length","includes","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,SAASA,UAAT,GAAsB;AAClB,QAAMC,IAAI,GAAG;AACTC,IAAAA,IADS;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,eAAe,EAAE,EAHR;AAITC,IAAAA,cAAc,EAAE,CAJP;AAKTC,IAAAA,kBAAkB,EAAE,CALX;AAMTC,IAAAA,mBAAmB,EAAE,CANZ;AAOTC,IAAAA,UAAU,EAAC,CAPF;AAQTC,IAAAA,MAAM,EAAE,EARC;AASTC,IAAAA,YAAY,EAAC,CATJ;AAUTC,IAAAA,aAAa,EAAE,CAVN;AAWTC,IAAAA,aAAa,EAAC,KAXL;AAYTC,IAAAA,WAAW,EAAC,CAZH;AAaTC,IAAAA,QAAQ,EAAE;AAbD,GAAb;AAiBAb,EAAAA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACC,IAAL,CAAUa,OAAV,CAAkB,KAAlB,EAAyB,KAAzB,CAAZ;AACA,QAAMC,KAAK,GAAGf,IAAI,CAACC,IAAL,CAAUe,KAAV,CAAgB,GAAhB,CAAd;AAEA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;AACtB,UAAMI,eAAe,GAAG,CAAC,GAAGF,MAAJ,EAAYC,IAAZ,EAAkBE,IAAlB,CAAuB,GAAvB,EAA4BC,MAA5B,GAAqC,CAACH,IAAI,CAACI,QAAL,CAAc,IAAd,CAA9D;;AAEA,QAAIH,eAAe,GAAGnB,IAAI,CAACG,eAA3B,EAA4C;AACxCH,MAAAA,IAAI,CAACE,OAAL,CAAaqB,IAAb,CAAkBN,MAAM,CAACG,IAAP,CAAY,GAAZ,IAAmB,GAArC;AACAH,MAAAA,MAAM,GAAG,EAAT;AACH;;AAEDA,IAAAA,MAAM,CAACM,IAAP,CAAYL,IAAZ;;AAEA,QAAIA,IAAI,CAACI,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACrBtB,MAAAA,IAAI,CAACE,OAAL,CAAaqB,IAAb,CAAkBN,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAlB;AACAH,MAAAA,MAAM,GAAG,EAAT;AACH;AACJ;;AACD,MAAIA,MAAM,CAACI,MAAX,EAAmB;AACfrB,IAAAA,IAAI,CAACE,OAAL,CAAaqB,IAAb,CAAkBN,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAlB;AAEH;;AACD,SAAOpsourcesContent":["// import React from 'react';\n// import classes from \"./keyboard.module.css\"\n//\n//\n// const Keyboard = () => {\n//     const input = document.querySelector(\"input\");\n//     const letters = Array.from(document.querySelectorAll(\"[data-letters]\"));\n//     const specs = Array.from(document.querySelectorAll(\"[data-spec]\"));\n//     const textExample=document.querySelector('#textExample');\n//     const speed=document.querySelector(\"#symbolsPerMinute\");\n//     const accuracy=document.querySelector(\"#errorPercent\");\n//\n//\n//     const text = `Изучая факторы обеспечившие непрерывность и устойчивость китайской цивилизации, авторы четырехтомника говорят о ее колоссальной\n// центростремительной силе, беспрестанном самосовершенствовании и моральном стержне, связанном в первую очередь с культом предков. Эта непрерывная,\n// единая цивилизация исходила из своей собственной логики эволюции и развития. В отличие от большинства других древних цивилизаций, давно сошедших\n// с исторической сцены, китайская занимала значительное пространство, что создавало благоприятные условия для ассимиляции и интеграции иных народов.\n// Главными условиями этого были воспитание и ненасильственное распространение китайской культуры.\n// Сущность китайской цивилизации авторы выражают термином «единство многообразия» (доюань итигэ), называют ее многокомпонентной и полиэтничной\n// (доюань вэньмин). Факторами, обеспечившими стабильность ее развития, называют восприимчивость к элементам пришедших извне культур, взаимодействие\n// элитарного и простонародного, а также «новаторство через возвращение к древности». Большое внимание в четырехтомнике уделяется вкладу китайской\n// цивилизации в мировую культуру, ее самобытным и разнообразным достижениям в науке и искусстве.`;\n//\n//     const part = createPart(text);\n//\n//     init();\n//\n//     function init() {\n//         addEventListener('keydown', onkeydown);\n//         addEventListener('keyup', onkeyup);\n//         viewUpdate();\n//\n//     }\n//\n//     function onkeydown(event) {\n//         event.preventDefault();\n//\n//         const letter = letters.find((x) => x.dataset.letters.includes(event.key));\n//\n//         if (letter) {\n//             letter.classList.add(\"pressed\");\n//             pressedWords(event.key);\n//             return;\n//         }\n//\n//         let key = event.key.toLowerCase();\n//\n//         if (key === \" \") {\n//             key = \"space\";\n//             pressedWords( \" \")\n//         }\n//\n//         if (key ===\"enter\"){\n//             pressedWords(\"\\n\")\n//         }\n//\n//         const ownSpecs = specs.filter((x) => x.dataset.spec === key);\n//         if (ownSpecs.length) {\n//             ownSpecs.forEach((spec) => spec.classList.add(\"pressed\"));\n//             return;\n//         }\n//     }\n//\n//     function onkeyup(event) {\n//         event.preventDefault();\n//\n//         const letter = letters.find((x) => x.dataset.letters.includes(event.key));\n//\n//         if (letter) {\n//             letter.classList.remove(\"pressed\");\n//             return;\n//         }\n//\n//         let key = event.key.toLowerCase();\n//\n//         if (key === \" \") {\n//             key = \"space\";\n//         }\n//\n//\n//         const ownSpecs = specs.filter((x) => x.dataset.spec === key);\n//         if (ownSpecs.length) {\n//             ownSpecs.forEach((spec) => spec.classList.remove(\"pressed\"));\n//             return;\n//         }\n//\n//     }\n//\n    function createPart() {\n        const part = {\n            text,\n            strings: [],\n            maxStringLength: 70,\n            maxShowStrings: 3,\n            currentStringIndex: 0,\n            currentPrintedIndex: 0,\n            sumSymbols:0,\n            errors: [],\n            errorCounter:0,\n            startingTimer: 0,\n            beginningTime:false,\n            timeCounter:0,\n            statFlag: false,\n\n        };\n\n        part.text = part.text.replace(/\\n/g, '\\n ');\n        const words = part.text.split(\" \");\n\n        let string = [];\n        for (const word of words) {\n            const newStringLength = [...string, word].join(\" \").length + !word.includes(\"\\n\");\n\n            if (newStringLength > part.maxStringLength) {\n                part.strings.push(string.join(' ') + ' ');\n                string = []\n            }\n\n            string.push(word);\n\n            if (word.includes('\\n')) {\n                part.strings.push(string.join(' '));\n                string = []\n            }\n        }\n        if (string.length) {\n            part.strings.push(string.join(' '))\n\n        }\n        return part;\n    }\n\n//     function pressedWords(letter) {\n//         part.beginningTime=true;\n//         if (!part.statFlag){\n//             part.statFlag=true;\n//             part.startingTimer=Date.now();\n//         }\n//         const string = part.strings[part.currentStringIndex];\n//         const printedLetter = string[part.currentPrintedIndex];\n//\n//         if (letter === printedLetter) {\n//             part.currentPrintedIndex++;\n//             if (string.length <= part.currentPrintedIndex) {\n//                 part.currentPrintedIndex = 0;\n//                 part.currentStringIndex++;\n//\n//                 part.statFlag=false;\n//                 part.timeCounter=Date.now()-part.startingTimer;\n//\n//             }\n//         } else if (!part.errors.includes(printedLetter)) {\n//             part.errors.push(printedLetter);\n//             part.errorCounter++;\n//         }\n//\n//         part.sumSymbols++;\n//         viewUpdate();\n//\n//     }\n//\n//     function viewUpdate() {\n//         const string = part.strings[part.currentStringIndex];\n//         const showedStrings = part.strings.slice(\n//             part.currentStringIndex,\n//             part.currentStringIndex + part.maxShowStrings\n//         );\n//         const div=document.createElement('div');\n//\n//         const firstString=document.createElement('div');\n//         firstString.classList.add('line');\n//         div.append(firstString);\n//\n//         const printedString=document.createElement('span');\n//         printedString.classList.add('done');\n//         printedString.textContent=string.slice(0, part.currentPrintedIndex);\n//\n//         firstString.append(\n//             printedString,\n//             ...string\n//                 .slice(part.currentPrintedIndex)\n//                 .split(\"\")\n//                 .map((letter) => {\n//                     if (letter===\" \"){\n//                         return \"•\"\n//                     }\n//\n//                     if (part.errors.includes(letter)){\n//                         const errorSpan=document.createElement('span');\n//                         errorSpan.classList.add('hint');\n//                         errorSpan.textContent=letter;\n//                         return errorSpan;\n//                     }\n//                     return letter;\n//                 })\n//         );\n//\n//         for (let i = 1; i < showedStrings.length; i++) {\n//             const nextString = document.createElement('div');\n//             nextString.classList.add('line');\n//             div.append(nextString);\n//\n//             nextString.append(\n//                 ...showedStrings[i]\n//                     .split(\"\").map((letter) => {\n//                         if (letter === \" \") {\n//                             return \"•\"\n//                         }\n//\n//                         if (part.errors.includes(letter)){\n//                             const errorSpan=document.createElement('span');\n//                             errorSpan.classList.add('hint');\n//                             errorSpan.textContent=letter;\n//                             return errorSpan;\n//                         }\n//                         return letter;\n//                     })\n//             );\n//         }\n//\n//         textExample.innerHTML=\"\";\n//         textExample.append(div);\n//\n//         input.value=string.slice(0, part.currentPrintedIndex);\n//\n//         if (!part.statFlag && part.beginningTime) {\n//             speed.textContent = Math.round(part.sumSymbols / (part.timeCounter / 1000 / 60));\n//             accuracy.textContent = Math.floor((10000 * part.errorCounter) / part.sumSymbols) / 100 + \"%\";\n//         }\n//     };\n//     return (\n//         <div>\n//         <div className=\"text\" id=\"textExample\">\n//             <div className=\"line line-1\">\n//                 <div>\n//                     <span className=\"done\"> На переднем плане, прямо перед</span>\n//                     <span className=\"hint\">н</span>ами, расположен был дворик, где стоял\n//                 </div>\n//                 <div className=\"line\">\n//                     наполовину вычищенный автомобиль. Шофер Остин был на этот раз\n//                 </div>\n//                 <div className=\"line\">\n//                     уволен окончательно и бесповоротно. Он раскинулся на земле,\n//                 </div>\n//             </div>\n//         </div>\n//\n//             <div className=\"keyboard\">\n//                 <div className=\"line\">\n//                     <div id=\"letter_ё\" data-letters=\"Ёё\">Ё</div>\n//                     <div id=\"letter_1\" data-letters=\"1\">1</div>\n//                     <div id=\"letter_2\" data-letters=\"2\">2</div>\n//                     <div id=\"letter_3\" data-letters=\"3\">3</div>\n//                     <div id=\"letter_4\" data-letters=\"4\">4</div>\n//                     <div id=\"letter_5\" data-letters=\"5\">5</div>\n//                     <div id=\"letter_6\" data-letters=\"6\">6</div>\n//                     <div id=\"letter_7\" data-letters=\"7\">7</div>\n//                     <div id=\"letter_8\" data-letters=\"8\">8</div>\n//                     <div id=\"letter_9\" data-letters=\"9\">9</div>\n//                     <div id=\"letter_0\" data-letters=\"0\">0</div>\n//                     <div id=\"letter_minus\" data-letters=\"-\">-</div>\n//                     <div id=\"letter_plus\" data-letters=\"+\">+</div>\n//                     <div className=\"backspace\" id=\"letter_backspace\" data-spec=\"backspace\">Backspace</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"tab\" id=\"letter_tab\" data-spec=\"tab\">Tab</div>\n//                     <div id=\"letter_й\" data-letters=\"Йй\">Й</div>\n//                     <div id=\"letter_ц\" data-letters=\"Цц\">Ц</div>\n//                     <div id=\"letter_у\" data-letters=\"Уу\">У</div>\n//                     <div id=\"letter_к\" data-letters=\"Кк\">К</div>\n//                     <div id=\"letter_е\" data-letters=\"Ее\">Е</div>\n//                     <div id=\"letter_н\" data-letters=\"Нн\">Н</div>\n//                     <div id=\"letter_г\" data-letters=\"Гг\">Г</div>\n//                     <div id=\"letter_ш\" data-letters=\"Шш\">Ш</div>\n//                     <div id=\"letter_щ\" data-letters=\"Щщ\">Щ</div>\n//                     <div id=\"letter_з\" data-letters=\"Зз\">З</div>\n//                     <div id=\"letter_х\" data-letters=\"Хх\">Х</div>\n//                     <div id=\"letter_ъ\" data-letters=\"Ъъ\">Ъ</div>\n//                     <div id=\"letter_slash\" data-letters=\"slash\">/</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"caps\" id=\"letter_capslock\" data-spec=\"capslock\">Caps Lock</div>\n//                     <div id=\"letter_ф\" data-letters=\"Фф\">Ф</div>\n//                     <div id=\"letter_ы\" data-letters=\"Ыы\">Ы</div>\n//                     <div id=\"letter_в\" data-letters=\"Вв\">В</div>\n//                     <div id=\"letter_а\" data-letters=\"Аа\">А</div>\n//                     <div id=\"letter_п\" data-letters=\"Пп\">П</div>\n//                     <div id=\"letter_р\" data-letters=\"Рр\">Р</div>\n//                     <div id=\"letter_о\" data-letters=\"Оо\">О</div>\n//                     <div id=\"letter_л\" data-letters=\"Лл\">Л</div>\n//                     <div id=\"letter_д\" data-letters=\"Дд\">Д</div>\n//                     <div id=\"letter_ж\" data-letters=\"Жж\">Ж</div>\n//                     <div id=\"letter_э\" data-letters=\"Ээ\">Э</div>\n//                     <div className=\"enter\" id=\"letter_enter\" data-spec=\"enter\">Enter</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"shift\" data-spec=\"shift\">Shift</div>\n//                     <div id=\"letter_я\" data-letters=\"Яя\">Я</div>\n//                     <div id=\"letter_ч\" data-letters=\"Чч\">Ч</div>\n//                     <div id=\"letter_с\" data-letters=\"Сс\">С</div>\n//                     <div id=\"letter_м\" data-letters=\"Мм\">М</div>\n//                     <div id=\"letter_и\" data-letters=\"Ии\">И</div>\n//                     <div id=\"letter_т\" data-letters=\"Тт\">Т</div>\n//                     <div id=\"letter_ь\" data-letters=\"Ьь\">Ь</div>\n//                     <div id=\"letter_б\" data-letters=\"Бб\">Б</div>\n//                     <div id=\"letter_ю\" data-letters=\"Юю\">Ю</div>\n//                     <div id=\"letter_dot\" data-spec=\"dot\">. <sup>,</sup></div>\n//                     <div className=\"shift\" data-spec=\"shift\">Shift</div>\n//                 </div>\n//                 <div className=\"line\">\n//                     <div className=\"space\" id=\"letter_space\" data-spec=\"space\"></div>\n//                     <div className=\"alt\" id=\"letter_alt\" data-spec=\"alt\">Alt</div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// };\n//\n// export default Keyboard;"]},"metadata":{},"sourceType":"module"}