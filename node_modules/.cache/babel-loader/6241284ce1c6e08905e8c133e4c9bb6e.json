{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport { useEffect } from \"react\";\nimport * as e from \"web-vitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewText = () => {\n  _s();\n\n  const [userText, setUserText] = useState(\"\");\n  const [counter, setCounter] = useState(0); // const [currTime, setCurrTime]=useState(new Date().toLocaleTimeString());\n  // const [startTime, setStartTime]=useState(0);\n  // const [endTime, setEndTime]=useState(new Date().toLocaleTimeString());\n\n  function handleChange(e) {\n    setUserText(e.target.value);\n\n    if (templateText[counter] === e.target.value[counter]) {\n      setUserText(e.target.value);\n      setCounter(counter => counter + 1);\n    }\n\n    const currTime = () => {\n      if (templateText[0] === e.target.value[0]) {\n        return new Date().toLocaleTimeString();\n      }\n    };\n\n    console.log(currTime); // function getStartTime() {\n    //     if (templateText[0] === e.target.value[0]) {\n    //\n    //         setCurrTime(currTime)\n    //     }\n    // }\n    //\n    // function getEndTime() {\n    //     if (templateText[3] === e.target.value[3]) {\n    //         setEndTime(endTime)\n    //     }\n    // }\n  }\n\n  let text = [];\n  const [templateText, setTemplateText] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setTemplateText(text));\n    return text;\n  }\n\n  useEffect(() => {\n    getText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"own_input\",\n      onChange: handleChange,\n      value: userText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      children: templateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"WG3Y/W8lhoPKMqwFB6x0nleENt8=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","InputText","MyButton","useEffect","e","ViewText","userText","setUserText","counter","setCounter","handleChange","target","value","templateText","currTime","Date","toLocaleTimeString","console","log","text","setTemplateText","getText","fetch","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAsBT,QAAQ,CAAC,CAAD,CAApC,CAHmB,CAInB;AACA;AACA;;AAKA,WAASU,YAAT,CAAsBN,CAAtB,EAAyB;AACrBG,IAAAA,WAAW,CAACH,CAAC,CAACO,MAAF,CAASC,KAAV,CAAX;;AAEA,QAAIC,YAAY,CAACL,OAAD,CAAZ,KAA0BJ,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeJ,OAAf,CAA9B,EAAuD;AACnDD,MAAAA,WAAW,CAACH,CAAC,CAACO,MAAF,CAASC,KAAV,CAAX;AACAH,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACH;;AAED,UAAMM,QAAQ,GAAG,MAAI;AACjB,UAAID,YAAY,CAAC,CAAD,CAAZ,KAAoBT,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,CAAxB,EAA2C;AACvC,eAAO,IAAIG,IAAJ,GAAWC,kBAAX,EAAP;AACH;AACJ,KAJD;;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAdqB,CAgBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAOD,MAAIK,IAAI,GAAG,EAAX;AACA,QAAM,CAACN,YAAD,EAAeO,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,iBAAeqB,OAAf,GAAyB;AACrBF,IAAAA,IAAI,GAAG,MAAMG,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIP,IAAI,GAAGO,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMH,eAAe,CAAED,IAAF,CAHlB,CAAb;AAIA,WAAOA,IAAP;AACH;;AAGDhB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAU,MAAA,SAAS,EAAC,WAApB;AAAgC,MAAA,QAAQ,EAAEX,YAA1C;AAA0D,MAAA,KAAK,EAAEJ;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BO;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEQ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/ED;;GAAMhB,Q;;KAAAA,Q;AAiFN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport {useEffect} from \"react\";\nimport * as e from \"web-vitals\";\n\n\nconst ViewText = () => {\n\n    const [userText, setUserText] = useState(\"\");\n    const [counter, setCounter]=useState(0);\n    // const [currTime, setCurrTime]=useState(new Date().toLocaleTimeString());\n    // const [startTime, setStartTime]=useState(0);\n    // const [endTime, setEndTime]=useState(new Date().toLocaleTimeString());\n\n\n\n\n    function handleChange(e) {\n        setUserText(e.target.value);\n\n        if (templateText[counter] === e.target.value[counter]) {\n            setUserText(e.target.value);\n            setCounter(counter => counter + 1);\n        }\n\n        const currTime = ()=>{\n            if (templateText[0] === e.target.value[0]) {\n                return new Date().toLocaleTimeString();\n            }\n        };\n\n        console.log(currTime)\n\n        // function getStartTime() {\n        //     if (templateText[0] === e.target.value[0]) {\n        //\n        //         setCurrTime(currTime)\n        //     }\n        // }\n        //\n        // function getEndTime() {\n        //     if (templateText[3] === e.target.value[3]) {\n        //         setEndTime(endTime)\n        //     }\n        // }\n\n    }\n\n   \n\n\n\n\n    let text = [];\n    const [templateText, setTemplateText] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setTemplateText (text));\n        return text\n    }\n\n\n    useEffect(() => {\n        getText();\n    }, []);\n\n\n\n\n\n    return (\n        <div>\n            <textarea className=\"own_input\" onChange={handleChange}   value={userText} ></textarea>\n            {/*<input className=\"own_input\" onChange={handleChange}   value={key} type=\"text\" />*/}\n            <div className=\"random_txt\">{templateText}</div>\n            <button className=\"btn_txt\" onClick={getText}>\n                Try again!\n            </button>\n\n        </div>\n\n    );\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}