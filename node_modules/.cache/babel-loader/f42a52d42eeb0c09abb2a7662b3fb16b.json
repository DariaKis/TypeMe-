{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/AddText.jsx\";\nimport React from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textItem = document.querySelector('.text_item');\nconst textBtn = document.querySelector('.text_btn');\nconst state = {\n  texts: []\n};\n\nconst createText = (text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"$\", text.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"$\", text.body]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\nconst fillTextsList = texts => {\n  textsList.innerHtml = \"\";\n\n  if (texts.length) {\n    texts.forEach((text, index) => textsList.innerHtml += createText(text, index));\n  }\n}; // textBtn.addEventListener('click', async()=>{\n//     await AddText();\n// });\n\n\nfunction AddText() {\n  return fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1', {\n    paras: {\n      \"Content-type\": \"aplication/json; charset=UTF-8\"\n    }\n  }).then(res => res.json()).then(text => console.log('paras', text)).then(texts => state.texts = state.texts.concat(texts));\n}\n\n_c = AddText;\nexport default AddText;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/AddText.jsx"],"names":["React","MyButton","textItem","document","querySelector","textBtn","state","texts","createText","text","index","title","body","fillTextsList","textsList","innerHtml","length","forEach","AddText","fetch","paras","then","res","json","console","log","concat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,QAAQ,GAACC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;AACA,MAAMC,OAAO,GAACF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAd;AACA,MAAME,KAAK,GAAC;AACRC,EAAAA,KAAK,EAAC;AADE,CAAZ;;AAIA,MAAMC,UAAU,GAAC,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAA,0BACI;AAAA,oBAAMD,IAAI,CAACE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA,oBAAMF,IAAI,CAACG,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAQI,MAAMC,aAAa,GAAEN,KAAD,IAAS;AACzBO,EAAAA,SAAS,CAACC,SAAV,GAAoB,EAApB;;AACA,MAAIR,KAAK,CAACS,MAAV,EAAiB;AACbT,IAAAA,KAAK,CAACU,OAAN,CAAc,CAACR,IAAD,EAAOC,KAAP,KAAeI,SAAS,CAACC,SAAV,IAAqBP,UAAU,CAACC,IAAD,EAAMC,KAAN,CAA5D;AACH;AACJ,CALD,C,CAOJ;AACA;AACA;;;AAEA,SAASQ,OAAT,GAAmB;AAGf,SAAOC,KAAK,CAAC,0EAAD,EAA6E;AACrFC,IAAAA,KAAK,EAAE;AACH,sBAAgB;AADb;AAD8E,GAA7E,CAAL,CAKFC,IALE,CAKGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALV,EAMFF,IANE,CAMIZ,IAAD,IAAUe,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBhB,IAArB,CANb,EAOFY,IAPE,CAOId,KAAD,IAASD,KAAK,CAACC,KAAN,GAAYD,KAAK,CAACC,KAAN,CAAYmB,MAAZ,CAAmBnB,KAAnB,CAPxB,CAAP;AASH;;KAZQW,O;AAcT,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\n\nconst textItem=document.querySelector('.text_item');\nconst textBtn=document.querySelector('.text_btn');\nconst state={\n    texts:[]\n};\n\nconst createText=(text, index)=>\n    <div>\n        <h1>${text.title}</h1>\n        <h1>${text.body}</h1>\n\n    </div>\n;\n\n    const fillTextsList=(texts)=>{\n        textsList.innerHtml=\"\";\n        if (texts.length){\n            texts.forEach((text, index)=>textsList.innerHtml+=createText(text,index))\n        }\n    };\n\n// textBtn.addEventListener('click', async()=>{\n//     await AddText();\n// });\n\nfunction AddText() {\n\n\n    return fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1', {\n        paras: {\n            \"Content-type\": \"aplication/json; charset=UTF-8\"\n        }\n    })\n        .then(res => res.json())\n        .then((text) => console.log('paras', text))\n        .then((texts)=>state.texts=state.texts.concat(texts))\n\n}\n\nexport default AddText;"]},"metadata":{},"sourceType":"module"}