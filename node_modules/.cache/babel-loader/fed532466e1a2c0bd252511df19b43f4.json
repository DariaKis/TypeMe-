{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/Text.jsx\";\nimport React, { useState } from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport InputText from \"../Text/inputText\";\nimport ViewText from \"../Text/ViewText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Text() {\n  //\n  // let text=[];\n  //\n  // const [value, setValue] = useState('');\n  // const [addText, setAddText]=useState('');\n  // const [counter,setCounter]=useState('100');\n  //\n  // const [ input, setInput] = useState('');\n  //\n  //\n  // async function getText() {\n  //     text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n  //         .then(res => res.json())\n  //         .then(data => text = data[0])\n  //         .then(() => setValue(text));\n  //     // .then(() => console.log(text[0]));\n  //     return text\n  // }\n  // const txt = Object.values(value).map(([value]) => ({value}));\n  // console.log(txt);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"txt_cover\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"txt_title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Type me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0422\\u0432\\u043E\\u0438 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speed\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0441\\u0442\\u043E\\u043A\\u0430\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0422\\u043E\\u0447\\u043D\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0441\\u0442\\u043E\\u043A\\u0430\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/Text.jsx"],"names":["React","useState","MyButton","InputText","ViewText","Text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAKA,SAASC,IAAT,GAAgB;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;KAlEQA,I;AAoET,eAAeA,IAAf","sourcesContent":["import React, {useState}  from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport InputText from \"../Text/inputText\";\nimport ViewText from \"../Text/ViewText\";\n\n\n\n\nfunction Text() {\n\n    //\n    // let text=[];\n    //\n    // const [value, setValue] = useState('');\n    // const [addText, setAddText]=useState('');\n    // const [counter,setCounter]=useState('100');\n    //\n    // const [ input, setInput] = useState('');\n    //\n    //\n    // async function getText() {\n    //     text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n    //         .then(res => res.json())\n    //         .then(data => text = data[0])\n    //         .then(() => setValue(text));\n    //     // .then(() => console.log(text[0]));\n    //     return text\n    // }\n    // const txt = Object.values(value).map(([value]) => ({value}));\n\n    // console.log(txt);\n\n\n    return (\n        <div className=\"txt_cover\">\n            <div className=\"txt_title\">\n                <h2>Type me!</h2>\n            </div>\n            {/*<InputText onSearch={setInput}  />*/}\n            {/*<input className=\"add_text\" type='text' value={addText} onChange={event => setAddText(event.target.addText)}/>*/}\n\n            {/*<div>{value}</div>*/}\n            <div >\n                <ViewText/>\n            </div>\n\n            <div className=\"results\">\n                <h2>Твои результаты:</h2>\n                <div className=\"speed\">\n                    <h3>\n                    скорость\n                    </h3>\n                    <div>стокато</div>\n                </div>\n                <div className=\"accuracy\">\n                    <h3>\n                        Точность\n                    </h3>\n                    <div>стокато</div>\n                </div>\n            </div>\n            {/*<MyInput*/}\n            {/*    type='text'*/}\n            {/*    value={value}*/}\n            {/*    // onChange={event => setValue(event.target.value)}*/}\n            {/*/>*/}\n            {/*<MyButton onClick={ViewText}>*/}\n            {/*    Let`s start!*/}\n            {/*</MyButton>*/}\n\n\n        </div>\n\n    );\n}\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}