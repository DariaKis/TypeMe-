{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/inputText.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport { useState } from \"react\";\nimport MyInput from \"../../UI/input/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Text() {\n  _s();\n\n  let text;\n  let newText;\n  const [value, setValue] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setValue(text));\n    return newText = setValue(text).toUpperCase;\n  } // const [newValue, setNewValue] = useState({text});\n  //\n  // function txt() {\n  //\n  //     console.log(newValue)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041D\\u0430\\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0439 \\u041C\\u0435\\u043D\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      type: \"text\",\n      value: value // onChange={event => setValue(event.target.value)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: text,\n      children: \"Let`s start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Text, \"jByi55hotCy99CsmdWrmrBk0P1M=\");\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/inputText.jsx"],"names":["React","MyButton","useState","MyInput","Text","text","newText","value","setValue","getText","fetch","then","res","json","data","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AAKZ,MAAIC,IAAJ;AACA,MAAIC,OAAJ;AACA,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA9B;;AAEA,iBAAeO,OAAf,GAAyB;AACrBJ,IAAAA,IAAI,GAAG,MAAMK,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIT,IAAI,GAAGS,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAKH,QAAQ,CAACH,IAAD,CAHV,CAAb;AAIA,WACIC,OAAO,GAACE,QAAQ,CAACH,IAAD,CAAR,CAAeU,WAD3B;AAGH,GAjBW,CAmBZ;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAER,KAFX,CAGI;;AAHJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEF,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA7CQD,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport {useState} from \"react\";\n\nimport MyInput from \"../../UI/input/MyInput\";\n\n\nfunction Text() {\n\n\n\n\n    let text;\n    let newText;\n    const[value,setValue]=useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() =>setValue(text));\n        return (\n            newText=setValue(text).toUpperCase\n        )\n    }\n\n    // const [newValue, setNewValue] = useState({text});\n    //\n    // function txt() {\n    //\n    //     console.log(newValue)\n    // }\n\n\n    return (\n        <div>\n            <div>\n                <span>Напечатай Меня!</span>\n            </div>\n            <MyInput\n                type='text'\n                value={value}\n                // onChange={event => setValue(event.target.value)}\n            />\n            <MyButton onClick={text}>\n                Let`s start!\n            </MyButton>\n\n\n        </div>\n\n    );\n}\n\nexport default Text;"]},"metadata":{},"sourceType":"module"}