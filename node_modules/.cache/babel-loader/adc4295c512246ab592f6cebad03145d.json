{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction highlightText(text, index) {\n  const highlightedText = `<span class=\"success\">${text.slice(0, index)}</span>${text.slice(index)}`;\n  return {\n    __html: highlightedText\n  };\n}\n\nconst ViewText = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  function handleChange(e) {\n    if (templateText[counter] === e.key) {\n      setCounter(counter => counter + 1);\n\n      if (counter === 1) {\n        setStartTime(Date.now());\n      } else {\n        if (counter === templateText.length - 1) {\n          setCurrentTime(Math.round(templateText.length / (Date.now() - startTime) * 60000));\n        }\n      }\n    }\n\n    console.log(templateText[counter]);\n    console.log(e.key);\n    console.log(counter);\n  }\n\n  useEffect(() => {\n    window.addEventListener('keypress', handleChange);\n    return () => window.removeEventListener('keypress', handleChange);\n  }, [handleChange]);\n  let text = [];\n  const [templateText, setTemplateText] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setTemplateText(text));\n    return text;\n  }\n\n  useEffect(() => {\n    getText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      dangerouslySetInnerHTML: highlightText(templateText, counter)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"Y2radI1ByUEKiV45UQJvmsUbV30=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","useEffect","highlightText","text","index","highlightedText","slice","__html","ViewText","counter","setCounter","startTime","setStartTime","currentTime","setCurrentTime","handleChange","e","templateText","key","Date","now","length","Math","round","console","log","window","addEventListener","removeEventListener","setTemplateText","getText","fetch","then","res","json","data"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useEffect} from \"react\";\n\nfunction highlightText(text, index){\n\n    const highlightedText = `<span class=\"success\">${text.slice(0, index)}</span>${text.slice(index)}`;\n\n    return  {__html: highlightedText};\n}\nconst ViewText = () => {\n\n\n    const [counter, setCounter] = useState(0);\n    const [startTime, setStartTime] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n\n    function handleChange(e) {\n        if (templateText[counter] === e.key) {\n            setCounter(counter => counter + 1);\n            if (counter === 1) {\n                setStartTime(Date.now())\n            } else {\n                if (counter === templateText.length - 1) {\n                    setCurrentTime(Math.round(templateText.length / (Date.now() - startTime) * 60000))\n                }\n            }\n\n        }console.log(templateText[counter]);\n\n\n        console.log(e.key);\n\n        console.log(counter);\n    }\n\n    useEffect(() => {\n        window.addEventListener('keypress', handleChange);\n        return () => window.removeEventListener('keypress', handleChange);\n    }, [handleChange]);\n\n    let text = [];\n    const [templateText, setTemplateText] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setTemplateText(text));\n        return text\n    }\n\n\n    useEffect(() => {\n        getText();\n    }, []);\n    return (\n        <div>\n            <div>\n                <h2>\n                    {currentTime}\n                </h2>\n            </div>\n            <div className=\"random_txt\" dangerouslySetInnerHTML={highlightText(templateText, counter)}></div>\n            <button className=\"btn_txt\" onClick={getText}>\n                Try again!\n            </button>\n        </div>\n    );\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}