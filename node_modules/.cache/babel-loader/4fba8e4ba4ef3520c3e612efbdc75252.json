{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport { useEffect } from \"react\";\nimport * as e from \"web-vitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewText = () => {\n  _s();\n\n  const [userText, setUserText] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n\n  let time = function handleChange(e) {\n    setUserText(e.target.value);\n\n    if (templateText[counter] === e.target.value[counter]) {\n      setUserText(e.target.value);\n      setCounter(counter => counter + 1);\n    } // if (templateText[0] === e.target.value[0]) {\n    //     setStartTime(startTime)\n    // }\n    //\n    // if (templateText === e.target.value) {\n    //     setEndTime(endTime)\n    // }\n\n\n    console.log(counter);\n  };\n\n  function getStartTime() {\n    if (counter > 0) {\n      setStartTime(startTime => startTime + to);\n    } else {\n      setStartTime(0);\n    }\n  }\n\n  console.log(startTime);\n  let text = [];\n  const [templateText, setTemplateText] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setTemplateText(text));\n    return text;\n  }\n\n  console.log(templateText);\n  useEffect(() => {\n    getText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"own_input\",\n      onChange: handleChange,\n      value: userText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      children: templateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"x2yhajeE25TodOGvZpc8actxGUs=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","InputText","MyButton","useEffect","e","ViewText","userText","setUserText","counter","setCounter","startTime","setStartTime","endTime","setEndTime","time","handleChange","target","value","templateText","console","log","getStartTime","to","text","setTemplateText","getText","fetch","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAsBb,QAAQ,CAAC,CAAD,CAApC;;AAEA,MAAIc,IAAI,GAER,SAASC,YAAT,CAAsBX,CAAtB,EAAyB;AACrBG,IAAAA,WAAW,CAACH,CAAC,CAACY,MAAF,CAASC,KAAV,CAAX;;AAEA,QAAIC,YAAY,CAACV,OAAD,CAAZ,KAA0BJ,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeT,OAAf,CAA9B,EAAuD;AACnDD,MAAAA,WAAW,CAACH,CAAC,CAACY,MAAF,CAASC,KAAV,CAAX;AACAR,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACH,KANoB,CAQrB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEH,GApBD;;AAsBA,WAASa,YAAT,GAAwB;AACpB,QAAIb,OAAO,GAAG,CAAd,EAAiB;AACbG,MAAAA,YAAY,CAACD,SAAS,IAAEA,SAAS,GAACY,EAAtB,CAAZ;AAEH,KAHD,MAGO;AACHX,MAAAA,YAAY,CAAC,CAAD,CAAZ;AAEH;AAEJ;;AAAAQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAGD,MAAIa,IAAI,GAAG,EAAX;AACA,QAAM,CAACL,YAAD,EAAeM,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,iBAAeyB,OAAf,GAAyB;AACrBF,IAAAA,IAAI,GAAG,MAAMG,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIP,IAAI,GAAGO,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMH,eAAe,CAAED,IAAF,CAHlB,CAAb;AAIA,WAAOA,IAAP;AACH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAU,MAAA,SAAS,EAAC,WAApB;AAAgC,MAAA,QAAQ,EAAEV,YAA1C;AAA0D,MAAA,KAAK,EAAET;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BY;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEO,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1ED;;GAAMpB,Q;;KAAAA,Q;AA4EN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport {useEffect} from \"react\";\nimport * as e from \"web-vitals\";\n\n\nconst ViewText = () => {\n\n    const [userText, setUserText] = useState(\"\");\n    const [counter, setCounter]=useState(0);\n    const [startTime, setStartTime]=useState(0);\n    const [endTime, setEndTime]=useState(0);\n\n    let time=\n\n    function handleChange(e) {\n        setUserText(e.target.value);\n\n        if (templateText[counter] === e.target.value[counter]) {\n            setUserText(e.target.value);\n            setCounter(counter => counter + 1);\n        }\n\n        // if (templateText[0] === e.target.value[0]) {\n        //     setStartTime(startTime)\n        // }\n        //\n        // if (templateText === e.target.value) {\n        //     setEndTime(endTime)\n        // }\n\n        console.log(counter);\n\n    }\n\n    function getStartTime() {\n        if (counter > 0) {\n            setStartTime(startTime=>startTime+to)\n\n        } else {\n            setStartTime(0)\n\n        }\n\n    }console.log(startTime);\n\n\n    let text = [];\n    const [templateText, setTemplateText] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setTemplateText (text));\n        return text\n    }\n    console.log(templateText);\n\n\n    useEffect(() => {\n        getText();\n    }, []);\n\n\n\n\n\n    return (\n        <div>\n            <textarea className=\"own_input\" onChange={handleChange}   value={userText} ></textarea>\n            {/*<input className=\"own_input\" onChange={handleChange}   value={key} type=\"text\" />*/}\n            <div className=\"random_txt\">{templateText}</div>\n            <button className=\"btn_txt\" onClick={getText}>\n                Try again!\n            </button>\n\n        </div>\n\n    );\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}