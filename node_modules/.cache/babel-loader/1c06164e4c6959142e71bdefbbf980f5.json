{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Text() {\n  _s();\n\n  let text = [];\n  const [value, setValue] = useState('');\n  const [addText, setAddText] = useState('');\n  const [counter, setCounter] = useState('100');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setValue(text)); // .then(() => console.log(text[0]));\n\n    return text;\n  } // const txt = Object.values(value).map(([value]) => ({value}));\n  //\n  // console.log(txt);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041D\\u0430\\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0439 \\u041C\\u0435\\u043D\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"add_text\",\n      type: \"text\",\n      value: addText,\n      onChange: event => setAddText(event.target.addText)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: getText,\n      children: \"Let`s start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Text, \"/aNKrKhpK/YA8aD+YYbIandGoig=\");\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/keyboard/Text.jsx"],"names":["React","useState","MyButton","Text","text","value","setValue","addText","setAddText","counter","setCounter","getText","fetch","then","res","json","data","event","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AAGZ,MAAIC,IAAI,GAAC,EAAT;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAqBT,QAAQ,CAAC,KAAD,CAAnC;;AAEA,iBAAeU,OAAf,GAAyB;AACrBP,IAAAA,IAAI,GAAG,MAAMQ,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIZ,IAAI,GAAGY,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMP,QAAQ,CAACF,IAAD,CAHX,CAAb,CADqB,CAKrB;;AAEA,WAAOA,IAAP;AACH,GAjBW,CAoBZ;AACA;AACA;;;AAGA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,KAAK,EAAEG,OAA/C;AAAwD,MAAA,QAAQ,EAAEU,KAAK,IAAIT,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaX,OAAd;AAArF;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEM,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA7CQR,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React, {useState}  from 'react';\nimport MyButton from \"../../UI/button/MyButton\";\n\n\n\n\nfunction Text() {\n\n\n    let text=[];\n\n    const [value, setValue] = useState('');\n    const [addText, setAddText]=useState('');\n    const [counter,setCounter]=useState('100');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setValue(text));\n        // .then(() => console.log(text[0]));\n\n        return text\n    }\n\n\n    // const txt = Object.values(value).map(([value]) => ({value}));\n    //\n    // console.log(txt);\n\n\n    return (\n        <div >\n            <div>\n                <span>Напечатай Меня!</span>\n            </div>\n            <input className=\"add_text\" type='text' value={addText} onChange={event => setAddText(event.target.addText)}/>\n            <div>{value}</div>\n            {/*<MyInput*/}\n            {/*    type='text'*/}\n            {/*    value={value}*/}\n            {/*    // onChange={event => setValue(event.target.value)}*/}\n            {/*/>*/}\n            <MyButton onClick={getText}>\n                Let`s start!\n            </MyButton>\n\n\n        </div>\n\n    );\n}\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}