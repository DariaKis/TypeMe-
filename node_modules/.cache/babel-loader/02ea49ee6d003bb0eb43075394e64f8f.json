{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport { useEffect } from \"react\";\nimport * as e from \"web-vitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewText = () => {\n  _s();\n\n  const [userText, setUserText] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [startTime, setStartTime] = useState(new Date().toLocaleTimeString());\n  const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());\n\n  function handleChange(e) {\n    if (templateText[counter] === e.target.value[counter]) {\n      setUserText(e.target.value);\n      setCounter(counter => counter + 1);\n\n      if (counter === 1) {\n        setStartTime(startTime);\n      }\n\n      if (counter === templateText.length - 1) {\n        setCurrentTime(currentTime);\n      }\n    }\n\n    console.log(startTime);\n  }\n\n  console.log(counter);\n  let text = [];\n  const [templateText, setTemplateText] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setTemplateText(text));\n    return text;\n  }\n\n  useEffect(() => {\n    getText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"own_input\",\n      onChange: handleChange,\n      value: userText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      children: templateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"Bs1i0th7OH6VMPi4iZai2ph/MhM=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","InputText","MyButton","useEffect","e","ViewText","userText","setUserText","counter","setCounter","startTime","setStartTime","Date","toLocaleTimeString","currentTime","setCurrentTime","handleChange","templateText","target","value","length","console","log","text","setTemplateText","getText","fetch","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA0BX,QAAQ,CAAC,IAAIY,IAAJ,GAAWC,kBAAX,EAAD,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAA8Bf,QAAQ,CAAC,IAAIY,IAAJ,GAAWC,kBAAX,EAAD,CAA5C;;AAEA,WAASG,YAAT,CAAsBZ,CAAtB,EAAyB;AAErB,QAAIa,YAAY,CAACT,OAAD,CAAZ,KAA0BJ,CAAC,CAACc,MAAF,CAASC,KAAT,CAAeX,OAAf,CAA9B,EAAuD;AACnDD,MAAAA,WAAW,CAACH,CAAC,CAACc,MAAF,CAASC,KAAV,CAAX;AACAV,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;;AACI,UAAIA,OAAO,KAAG,CAAd,EAAiB;AACbG,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACH;;AACD,UAAIF,OAAO,KAAKS,YAAY,CAACG,MAAb,GAAsB,CAAtC,EAAwC;AACpCL,QAAAA,cAAc,CAACD,WAAD,CAAd;AACH;AAGR;;AAAAO,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AAEA;;AACLW,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAIA,MAAIe,IAAI,GAAG,EAAX;AACA,QAAM,CAACN,YAAD,EAAeO,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,iBAAeyB,OAAf,GAAyB;AACrBF,IAAAA,IAAI,GAAG,MAAMG,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIP,IAAI,GAAGO,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMH,eAAe,CAAED,IAAF,CAHlB,CAAb;AAIA,WAAOA,IAAP;AACH;;AAGDpB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAU,MAAA,SAAS,EAAC,WAApB;AAAgC,MAAA,QAAQ,EAAET,YAA1C;AAA0D,MAAA,KAAK,EAAEV;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BW;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEQ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxDD;;GAAMpB,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport {useEffect} from \"react\";\nimport * as e from \"web-vitals\";\n\n\nconst ViewText = () => {\n\n    const [userText, setUserText] = useState(\"\");\n    const [counter, setCounter]=useState(0);\n    const [startTime, setStartTime]=useState(new Date().toLocaleTimeString());\n    const [currentTime, setCurrentTime]=useState(new Date().toLocaleTimeString());\n\n    function handleChange(e) {\n\n        if (templateText[counter] === e.target.value[counter]) {\n            setUserText(e.target.value);\n            setCounter(counter => counter + 1);\n                if (counter===1) {\n                    setStartTime(startTime)\n                }\n                if (counter === templateText.length - 1){\n                    setCurrentTime(currentTime)\n                }\n\n\n        }console.log(startTime);\n\n        }\n    console.log(counter);\n\n\n\n    let text = [];\n    const [templateText, setTemplateText] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setTemplateText (text));\n        return text\n    }\n\n\n    useEffect(() => {\n        getText();\n    }, []);\n\n\n    return (\n        <div>\n            <textarea className=\"own_input\" onChange={handleChange}   value={userText} ></textarea>\n            {/*<input className=\"own_input\" onChange={handleChange}   value={key} type=\"text\" />*/}\n            <div className=\"random_txt\">{templateText}</div>\n            <button className=\"btn_txt\" onClick={getText}>\n                Try again!\n            </button>\n\n        </div>\n\n    );\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}