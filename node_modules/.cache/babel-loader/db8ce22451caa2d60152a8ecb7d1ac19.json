{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/TextItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KeyPress = () => {\n  _s();\n\n  const [value, setKey] = useState(\"\"); // const [count, setCount]=useState(\"\");\n\n  function handleChange(e) {\n    setKey(e.target.value);\n  }\n\n  const typeTxt = Object.values(value).map(_ref => {\n    let [value] = _ref;\n    return {\n      value\n    };\n  }); // function handleBackSpace(e) {\n  //         setCount(count=>[...count,key]);\n  //\n  // }\n\n  console.log(typeTxt); // console.log(count);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      value: value,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(KeyPress, \"D88WYr27Rm1PSdOj+0NXWubMDmw=\");\n\n_c = KeyPress;\nexport default KeyPress; // const KeyPress = (props) => {\n//     const escFunction = useCallback((event) => {\n//         if(event.keyValue === \"A\") {\n//             //Do whatever when esc is pressed\n//         }\n//         console.log(event.keyValue);\n//     }, []);\n//\n//     useEffect(() => {\n//         document.addEventListener(\"keydown\", escFunction, false);\n//\n//         return () => {\n//             document.removeEventListener(\"keydown\", escFunction, false);\n//         };\n//     }, []);\n//\n//     return (\n//         <input />\n//     )\n// };\n// export default KeyPress;\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyPress\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/TextItem.jsx"],"names":["React","useCallback","useEffect","useState","KeyPress","value","setKey","handleChange","e","target","typeTxt","Object","values","map","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAIA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAGlB,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBH,QAAQ,CAAC,EAAD,CAAhC,CAHkB,CAIlB;;AAIA,WAASI,YAAT,CAAsBC,CAAtB,EAAwB;AACpBF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACH;;AAID,QAAMK,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBQ,GAArB,CAAyB;AAAA,QAAC,CAACR,KAAD,CAAD;AAAA,WAAc;AAACA,MAAAA;AAAD,KAAd;AAAA,GAAzB,CAAhB,CAdkB,CAkBlB;AACA;AACA;AACA;;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAvBkB,CA0BlB;;AAIA,sBACI;AAAA,2BAEI;AAAO,MAAA,QAAQ,EAAEH,YAAjB;AAAiC,MAAA,KAAK,EAAEF,KAAxC;AAA+C,MAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtCD;;GAAMD,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {useCallback} from \"react\";\nimport {useEffect} from \"react\";\nimport {useState} from \"react\";\n\n\n\nconst KeyPress = () =>{\n\n\n    const [value, setKey] = useState(\"\");\n    // const [count, setCount]=useState(\"\");\n\n\n\n    function handleChange(e){\n        setKey(e.target.value);\n    }\n\n\n\n    const typeTxt = Object.values(value).map(([value]) => ({value}));\n\n\n\n    // function handleBackSpace(e) {\n    //         setCount(count=>[...count,key]);\n    //\n    // }\n\n    console.log(typeTxt);\n\n\n    // console.log(count);\n\n\n\n    return (\n        <div>\n\n            <input onChange={handleChange}   value={value} type=\"text\" />\n\n            {/*<input onChange={handleChange}  onKeyDown={handleBackSpace} value={key} type=\"text\" />*/}\n        </div>\n    )\n};\nexport default KeyPress;\n\n\n// const KeyPress = (props) => {\n//     const escFunction = useCallback((event) => {\n//         if(event.keyValue === \"A\") {\n//             //Do whatever when esc is pressed\n//         }\n//         console.log(event.keyValue);\n//     }, []);\n//\n//     useEffect(() => {\n//         document.addEventListener(\"keydown\", escFunction, false);\n//\n//         return () => {\n//             document.removeEventListener(\"keydown\", escFunction, false);\n//         };\n//     }, []);\n//\n//     return (\n//         <input />\n//     )\n// };\n// export default KeyPress;\n\n\n"]},"metadata":{},"sourceType":"module"}