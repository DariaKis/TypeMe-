{"ast":null,"code":"var _jsxFileName = \"/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport { useEffect } from \"react\";\nimport * as e from \"web-vitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewText = () => {\n  _s();\n\n  const [key, setKey] = useState(\"\");\n\n  function handleChange(e) {\n    setKey(e.target.value);\n  } // const typeTxt = Object.values(key).map(([value]) => ({value}));\n\n\n  let text = [];\n  const [value, setValue] = useState('');\n\n  async function getText() {\n    text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1').then(res => res.json()).then(data => text = data[0]).then(() => setValue(text));\n    return text;\n  } // const txt = Object.values(value).map(([value]) => ({value}));\n\n\n  useEffect(() => {\n    getText();\n  }, []);\n  const error = [];\n\n  const trueOrNot = () => {\n    for (let i = 0; i < text.length; i++) {\n      if (value[i] === e.target.value[i]) {\n        setKey(e.target.value);\n        i++;\n      }\n    }\n  }; // console.log(value);\n\n\n  console.log(trueOrNot);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"own_input\",\n      onChange: handleChange,\n      value: key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random_txt\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_txt\",\n      onClick: getText,\n      children: \"Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewText, \"pLlW+j9FTS/8PFGiitjfBlC/Y9E=\");\n\n_c = ViewText;\nexport default ViewText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewText\");","map":{"version":3,"sources":["/Users/darida/WebstormProjects/untitledOWN/src/components/pages/Text/ViewText.jsx"],"names":["React","useState","InputText","MyButton","useEffect","e","ViewText","key","setKey","handleChange","target","value","text","setValue","getText","fetch","then","res","json","data","error","trueOrNot","i","length","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;;AACA,WAASQ,YAAT,CAAsBJ,CAAtB,EAAwB;AACpBG,IAAAA,MAAM,CAACH,CAAC,CAACK,MAAF,CAASC,KAAV,CAAN;AACH,GALkB,CAMnB;;;AAEA,MAAIC,IAAI,GAAG,EAAX;AACA,QAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,iBAAea,OAAf,GAAyB;AACrBF,IAAAA,IAAI,GAAG,MAAMG,KAAK,CAAC,0EAAD,CAAL,CACRC,IADQ,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADJ,EAERF,IAFQ,CAEHG,IAAI,IAAIP,IAAI,GAAGO,IAAI,CAAC,CAAD,CAFhB,EAGRH,IAHQ,CAGH,MAAMH,QAAQ,CAACD,IAAD,CAHX,CAAb;AAIA,WAAOA,IAAP;AACH,GAjBkB,CAkBnB;;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMM,KAAK,GAAC,EAAZ;;AACA,QAAMC,SAAS,GAAC,MAAI;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACV,IAAI,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,UAAIX,KAAK,CAACW,CAAD,CAAL,KAAajB,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeW,CAAf,CAAjB,EAAoC;AAChCd,QAAAA,MAAM,CAACH,CAAC,CAACK,MAAF,CAASC,KAAV,CAAN;AACAW,QAAAA,CAAC;AAEJ;AACJ;AACJ,GARD,CAzBmB,CAmCnB;;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAKA,sBACI;AAAA,4BACI;AAAU,MAAA,SAAS,EAAC,WAApB;AAAgC,MAAA,QAAQ,EAAEZ,YAA1C;AAA0D,MAAA,KAAK,EAAEF;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEG,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CArDD;;GAAMR,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport InputText from \"./inputText\";\nimport MyButton from \"../../UI/button/MyButton\";\nimport {useEffect} from \"react\";\nimport * as e from \"web-vitals\";\n\n\nconst ViewText = () => {\n\n    const [key, setKey] = useState(\"\");\n    function handleChange(e){\n        setKey(e.target.value);\n    }\n    // const typeTxt = Object.values(key).map(([value]) => ({value}));\n\n    let text = [];\n    const [value, setValue] = useState('');\n\n    async function getText() {\n        text = await fetch('https://baconipsum.com/api/?type=all-meat&sentences=5&start-with-lorem=1')\n            .then(res => res.json())\n            .then(data => text = data[0])\n            .then(() => setValue(text));\n        return text\n    }\n    // const txt = Object.values(value).map(([value]) => ({value}));\n\n    useEffect(() => {\n        getText();\n    }, []);\n\n    const error=[];\n    const trueOrNot=()=>{\n        for (let i = 0; i<text.length; i++) {\n            if (value[i] === e.target.value[i]) {\n                setKey(e.target.value);\n                i ++;\n\n            }\n        }\n    };\n\n    // console.log(value);\n    console.log(trueOrNot);\n\n\n\n\n    return (\n        <div>\n            <textarea className=\"own_input\" onChange={handleChange}   value={key} ></textarea>\n            {/*<input className=\"own_input\" onChange={handleChange}   value={key} type=\"text\" />*/}\n            <div className=\"random_txt\">{value}</div>\n            <button className=\"btn_txt\" onClick={getText}>\n                Try again!\n            </button>\n\n        </div>\n\n    );\n};\n\nexport default ViewText;"]},"metadata":{},"sourceType":"module"}